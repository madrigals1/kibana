services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION}
    container_name: ${ELASTICSEARCH_CONTAINER_NAME}
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      - xpack.security.enabled=${XPACK_SECURITY_ENABLED}
      - xpack.security.enrollment.enabled=false
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
      - "${ELASTICSEARCH_TRANSPORT_PORT}:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elk_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  logstash:
    image: docker.elastic.co/logstash/logstash:${LOGSTASH_VERSION}
    container_name: ${LOGSTASH_CONTAINER_NAME}
    environment:
      - LS_JAVA_OPTS=${LS_JAVA_OPTS}
      - XPACK_MONITORING_ENABLED=${XPACK_MONITORING_ENABLED}
    ports:
      - "${LOGSTASH_BEATS_PORT}:5044"
      - "${LOGSTASH_HTTP_PORT}:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - logstash_data:/usr/share/logstash/data
    networks:
      - elk_network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9600 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    build: .
    container_name: ${KIBANA_CONTAINER_NAME}
    environment:
      - ELASTICSEARCH_HOSTS=http://${ELASTICSEARCH_CONTAINER_NAME}:9200
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk_network
      - https_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  elasticsearch_data:
    driver: local
  logstash_data:
    driver: local

networks:
  elk_network:
    external: true
    name: ${ELK_NETWORK}
  https_network:
    external: true
    name: ${HTTPS_NETWORK} 
